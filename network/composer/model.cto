/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Sample business network definition.
 */
namespace com.reliancenetwork.ats


participant Exporter identified by exporterId {
  o String exporterId
  o String email
  o String address
  o Double accountBalance
}

participant Shipper identified by shipperId {
  o String shipperId
  o String email
  o String address
  o Double accountBalance
}

participant Importer identified by importerId {
  o String importerId
  o String email
  o String address
  o Double accountBalance
}

enum AssetType {
  o MEDICINE
  o FUEL
  o TRUCKS
  o WIRES
  o TABLES
  o LAPTOPS
  o CHAIRS
}

enum ShipmentStatus {
  o CREATED
  o IN_TRANSIT
  o ARRIVED
}

enum CompassDirection {
  o N
  o S
  o E
  o W
}

asset Shipment identified by shipmentId {
  o String shipmentId
  o AssetType assetType
  o ShipmentStatus shipmentStatus
  o Long unitCount
  --> Contract contract
  o AccelerationReading[] accelerationReadings
  o TemperatureReading[] temperatureReadings
  o GPSReading[] gpsReadings
}

asset Contract identified by contractId {
  o String contractId
  --> Exporter exporter
  --> Importer importer
  --> Shipper shipper
  o DateTime arrivalDateTime
  o Double unitPrice
  o Double minimumTemperature
  o Double maximumTemperature
  o Double minimumPenaltyFactor
  o Double maximumPenaltyFactor
  o Double maximumAcceleration 
}

event TemperatureThreshold {
  o Double temperature
  o String message
  o String latitude
  o String longitude
  o DateTime readingTime
  --> Shipment shipment
}

event AccelerationThreshold {
  o Double accelerationX
  o Double accelerationY
  o Double accelerationZ
  o String message
  o String latitude
  o String longitude
  o DateTime readingTime
  --> Shipment shipment
}

event ShipmentInPort {
  o String message
  --> Shipment shipment
}

abstract transaction ShipmentTransaction {
  --> Shipment shipment
}

transaction AccelerationReading extends ShipmentTransaction {
  o Double accelerationX
  o Double accelerationY
  o Double accelerationZ
  o String latitude
  o String longitude
  o DateTime readingTime optional
}

transaction TemperatureReading extends ShipmentTransaction {
  o Double celcius
  o String latitude
  o String longitude
  o DateTime readingTime optional
}

transaction GPSReading extends ShipmentTransaction {
  o String latitude
  o CompassDirection latitudeDirection
  o String longitude
  o CompassDirection longitudeDirection
  o DateTime readingTime optional
  o DateTime readingDate optional
}

transaction ShipmentReceived {
  --> Shipment shipment
}
